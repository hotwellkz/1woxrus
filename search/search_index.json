{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"CONTRIBUTING/","title":"Contribution Guidelines","text":"<p>Welcome! This guide provides all the details you need to contribute effectively to the project. Thank you for helping us make bolt.diy a better tool for developers worldwide. \ud83d\udca1</p>"},{"location":"CONTRIBUTING/#table-of-contents","title":"\ud83d\udccb Table of Contents","text":"<ol> <li>Code of Conduct </li> <li>How Can I Contribute? </li> <li>Pull Request Guidelines </li> <li>Coding Standards </li> <li>Development Setup </li> <li>Testing </li> <li>Deployment </li> <li>Docker Deployment </li> <li>VS Code Dev Containers Integration </li> </ol>"},{"location":"CONTRIBUTING/#code-of-conduct","title":"\ud83d\udee1\ufe0f Code of Conduct","text":"<p>This project is governed by our Code of Conduct. By participating, you agree to uphold this code. Report unacceptable behavior to the project maintainers.</p>"},{"location":"CONTRIBUTING/#how-can-i-contribute","title":"\ud83d\udee0\ufe0f How Can I Contribute?","text":""},{"location":"CONTRIBUTING/#1-reporting-bugs-or-feature-requests","title":"1\ufe0f\u20e3 Reporting Bugs or Feature Requests","text":"<ul> <li>Check the issue tracker to avoid duplicates.</li> <li>Use issue templates (if available).  </li> <li>Provide detailed, relevant information and steps to reproduce bugs.</li> </ul>"},{"location":"CONTRIBUTING/#2-code-contributions","title":"2\ufe0f\u20e3 Code Contributions","text":"<ol> <li>Fork the repository.  </li> <li>Create a feature or fix branch.  </li> <li>Write and test your code.  </li> <li>Submit a pull request (PR).</li> </ol>"},{"location":"CONTRIBUTING/#3-join-as-a-core-contributor","title":"3\ufe0f\u20e3 Join as a Core Contributor","text":"<p>Interested in maintaining and growing the project? Fill out our Contributor Application Form.</p>"},{"location":"CONTRIBUTING/#pull-request-guidelines","title":"\u2705 Pull Request Guidelines","text":""},{"location":"CONTRIBUTING/#pr-checklist","title":"PR Checklist","text":"<ul> <li>Branch from the main branch.  </li> <li>Update documentation, if needed.  </li> <li>Test all functionality manually.  </li> <li>Focus on one feature/bug per PR.  </li> </ul>"},{"location":"CONTRIBUTING/#review-process","title":"Review Process","text":"<ol> <li>Manual testing by reviewers.  </li> <li>At least one maintainer review required.  </li> <li>Address review comments.  </li> <li>Maintain a clean commit history.</li> </ol>"},{"location":"CONTRIBUTING/#coding-standards","title":"\ud83d\udccf Coding Standards","text":""},{"location":"CONTRIBUTING/#general-guidelines","title":"General Guidelines","text":"<ul> <li>Follow existing code style.  </li> <li>Comment complex logic.  </li> <li>Keep functions small and focused.  </li> <li>Use meaningful variable names.</li> </ul>"},{"location":"CONTRIBUTING/#development-setup","title":"\ud83d\udda5\ufe0f Development Setup","text":""},{"location":"CONTRIBUTING/#1-initial-setup","title":"1\ufe0f\u20e3 Initial Setup","text":"<ul> <li>Clone the repository: <pre><code>git clone https://github.com/stackblitz-labs/bolt.diy.git\n</code></pre></li> <li>Install dependencies: <pre><code>pnpm install\n</code></pre></li> <li>Set up environment variables:  </li> <li>Rename <code>.env.example</code> to <code>.env.local</code>.  </li> <li>Add your API keys:      <pre><code>GROQ_API_KEY=XXX\nHuggingFace_API_KEY=XXX\nOPENAI_API_KEY=XXX\n...\n</code></pre></li> <li>Optionally set:  <ul> <li>Debug level: <code>VITE_LOG_LEVEL=debug</code> </li> <li>Context size: <code>DEFAULT_NUM_CTX=32768</code> </li> </ul> </li> </ul> <p>Note: Never commit your <code>.env.local</code> file to version control. It\u2019s already in <code>.gitignore</code>.</p>"},{"location":"CONTRIBUTING/#2-run-development-server","title":"2\ufe0f\u20e3 Run Development Server","text":"<p><pre><code>pnpm run dev\n</code></pre> Tip: Use Google Chrome Canary for local testing.</p>"},{"location":"CONTRIBUTING/#testing","title":"\ud83e\uddea Testing","text":"<p>Run the test suite with: <pre><code>pnpm test\n</code></pre></p>"},{"location":"CONTRIBUTING/#deployment","title":"\ud83d\ude80 Deployment","text":""},{"location":"CONTRIBUTING/#deploy-to-cloudflare-pages","title":"Deploy to Cloudflare Pages","text":"<p><pre><code>pnpm run deploy\n</code></pre> Ensure you have required permissions and that Wrangler is configured.</p>"},{"location":"CONTRIBUTING/#docker-deployment","title":"\ud83d\udc33 Docker Deployment","text":"<p>This section outlines the methods for deploying the application using Docker. The processes for Development and Production are provided separately for clarity.</p>"},{"location":"CONTRIBUTING/#development-environment","title":"\ud83e\uddd1\u200d\ud83d\udcbb Development Environment","text":""},{"location":"CONTRIBUTING/#build-options","title":"Build Options","text":"<p>Option 1: Helper Scripts <pre><code># Development build\nnpm run dockerbuild\n</code></pre></p> <p>Option 2: Direct Docker Build Command <pre><code>docker build . --target bolt-ai-development\n</code></pre></p> <p>Option 3: Docker Compose Profile <pre><code>docker-compose --profile development up\n</code></pre></p>"},{"location":"CONTRIBUTING/#running-the-development-container","title":"Running the Development Container","text":"<pre><code>docker run -p 5173:5173 --env-file .env.local bolt-ai:development\n</code></pre>"},{"location":"CONTRIBUTING/#production-environment","title":"\ud83c\udfed Production Environment","text":""},{"location":"CONTRIBUTING/#build-options_1","title":"Build Options","text":"<p>Option 1: Helper Scripts <pre><code># Production build\nnpm run dockerbuild:prod\n</code></pre></p> <p>Option 2: Direct Docker Build Command <pre><code>docker build . --target bolt-ai-production\n</code></pre></p> <p>Option 3: Docker Compose Profile <pre><code>docker-compose --profile production up\n</code></pre></p>"},{"location":"CONTRIBUTING/#running-the-production-container","title":"Running the Production Container","text":"<pre><code>docker run -p 5173:5173 --env-file .env.local bolt-ai:production\n</code></pre>"},{"location":"CONTRIBUTING/#coolify-deployment","title":"Coolify Deployment","text":"<p>For an easy deployment process, use Coolify: 1. Import your Git repository into Coolify. 2. Choose Docker Compose as the build pack. 3. Configure environment variables (e.g., API keys). 4. Set the start command: <pre><code>docker compose --profile production up\n</code></pre></p>"},{"location":"CONTRIBUTING/#vs-code-dev-containers-integration","title":"\ud83d\udee0\ufe0f VS Code Dev Containers Integration","text":"<p>The <code>docker-compose.yaml</code> configuration is compatible with VS Code Dev Containers, making it easy to set up a development environment directly in Visual Studio Code.</p>"},{"location":"CONTRIBUTING/#steps-to-use-dev-containers","title":"Steps to Use Dev Containers","text":"<ol> <li>Open the command palette in VS Code (<code>Ctrl+Shift+P</code> or <code>Cmd+Shift+P</code> on macOS).  </li> <li>Select Dev Containers: Reopen in Container.  </li> <li>Choose the development profile when prompted.  </li> <li>VS Code will rebuild the container and open it with the pre-configured environment.</li> </ol>"},{"location":"CONTRIBUTING/#environment-variables","title":"\ud83d\udd11 Environment Variables","text":"<p>Ensure <code>.env.local</code> is configured correctly with: - API keys. - Context-specific configurations.  </p> <p>Example for the <code>DEFAULT_NUM_CTX</code> variable: <pre><code>DEFAULT_NUM_CTX=24576 # Uses 32GB VRAM\n</code></pre></p>"}]}